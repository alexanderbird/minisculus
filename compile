#!/usr/local/bin/ruby

require './compiler/compiler.rb'
require 'optparse'

options = { mode: :compile }
OptionParser.new do |opts|
  opts.banner = "Usage: ./compile infile.m+ [options]"

  opts.on("-s", "--silent", "Supress all output") do |mode|
    options[:silent] = true
  end

  opts.on("-v", "--verbose", "Include stack trace in error output. Overrides --silent") do |mode|
    options[:verbose] = true
    options[:silent] = false
  end

  mode_help = <<-eos
Compiler mode. One of: lex, ast, compile. Default is `compile`
                                        o `lex` prints tokens to stdout (`./compile in.m+ -m lex > tokens.txt`)
                                        o `ast` generates xml version of the tree, sends to stdout (`./compile in.m+ -m ast > ast.xml`)
                                        o `compile` generates stack machine code and prints it to stdout (`./compile in.m+ -m compile > out.m+c`)
  eos
  opts.on("-m [MODE]", "--mode [MODE]", [:lex, :ast, :compile], mode_help) do |mode|
    options[:mode] = mode
  end
end.parse!

Compiler.compile ARGV.first, options
